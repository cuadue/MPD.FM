enum State {
  CONNECTING
  STOPPED 
  PLAYING
  ERROR
}

type Station {
  id: ID!
  streamUrl: String!
  name: String!
  description: String
  logoUrl: String
}

type NowPlaying {
  station: Station
  title: String
}

type Status {
  state: State
  nowPlaying: NowPlaying
  errorMessage: String
}

type Query {
  status: Status
  stations: [Station!]
}

input AddStationInput {
  streamUrl: String!
  name: String!
  description: String
  logoUrl: String
}

type Mutation {
  play(stationId: ID!): State!
  stop: State!
  addStation(input: AddStationInput!): Station
}

type Subscription {
  statusChanged: Status
}