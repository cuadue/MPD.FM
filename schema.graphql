enum State {
  CONNECTING
  STOPPED 
  PLAYING
  ERROR
}

type Station {
  id: ID!
  streamUrl: String!
  name: String
  description: String
  logoUrl: String
}

type NowPlaying {
  station: Station
  title: String
}

type Query {
  state: State
  nowPlaying: NowPlaying
  errorMessage: String
  stations: [Station!]
}

# type AddStationInput {
#   name: String!
#   description: String
#   logoUrl: String!
#   streamUrl: String!
# }

# type Mutation {
#   play(stationId: ID!): State!
#   pause: State!
#   resume: State!
#   addStation(input: AddStationInput!): Station
# }
# 
# type Subscription {
#   statusChanged: Status
# }